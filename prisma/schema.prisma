// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Module {
  id              Int           @id @default(autoincrement())
  datePublication DateTime?
  lastUpdate      DateTime?
  nom             String
  code            String
  slug            String        @unique
  pilier          String
  thematique      String
  description     String?
  sessions        Session[]
  metasModule     MetasModule?
}

model MetasModule {
  id               Int      @id @default(autoincrement())
  resumeProgramme  String   
  objectifs        String   
  duree            String  
  publicCible      String   
  tarif            String    
  programmeModule  Json     
  moduleId         Int      @unique
  module           Module   @relation(fields: [moduleId], references: [id])
}

model User {
  id         Int       @id @default(autoincrement())
  nom        String
  prenom     String
  region     String?
  mail       String    @unique
  telephone  String?
  motDePasse String
  fonction   String
  organisation String?
  newsletter Boolean
  sessions   Session[] @relation("UserSessions")
  registrations  Registration[]
  reviews   Review[]
}

model Session {
  id             Int          @id @default(autoincrement())
  datePublication DateTime?
  lastUpdate      DateTime?
  region          String
  departement     String
  dateDebut       DateTime
  moduleId        Int
  module          Module       @relation(fields: [moduleId], references: [id])
  metasSession    MetasSession?
  status          String
  users           User[]       @relation("UserSessions")
  registrations   Registration[]
  reviews   Review[]
}

model MetasSession {
  id                    Int      @id @default(autoincrement())
  dateHoraires          String  
  lieuRencontre         String
  nombrePlaces          String
  nombreJours           String?
  infosTransport        String
  dateLimiteInscription String
  infosComplementaires  String  
  explications          String?
  intervenants          Json     
  programmeSession      Json     
  urlsPDF               Json     
  sessionId             Int      @unique
  session               Session  @relation(fields: [sessionId], references: [id])
}

model Registration {
  id             Int      @id @default(autoincrement())
  civilite       String
  nom            String
  prenom         String
  mail           String
  structure      String
  fonction       String?
  typeFonction   String
  ville          String?
  region         String
  telephone      String?
  transport      String?
  besoins        String?
  repas          Boolean
  repas2         Boolean?
  userId         Int
  sessionId      Int
  user           User     @relation(fields: [userId], references: [id])
  session        Session  @relation(fields: [sessionId], references: [id])
}

model Review {
  id          Int      @id @default(autoincrement())
  note        Int      // Supposons que la note soit un entier. Ajustez selon vos besoins
  commentaire String
  userId      Int
  sessionId   Int
  user        User     @relation(fields: [userId], references: [id])
  session     Session  @relation(fields: [sessionId], references: [id])
}
